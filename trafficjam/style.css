div, button, select, option {
  font-size: 1em;
  font-family: sans-serif;
}

code, #input_code, .numbers {
  font-family: monospace;
}

code {
  font-size: 1.2em;
  margin-left: 10px;
}

#board {
  width: 100%;
  height: 100%;
}

#board_box {
  max-width: min(95vw, 90vh, 800px);
  min-width: 400px;
  flex: 1 1 auto;
  margin: auto;
}

/* https://css-tricks.com/aspect-ratio-boxes/#the-psuedo-element-tactic*/
#board_box::before {
  content: "";
  width: 1px;
  margin-left: -1px;
  float: left;
  height: 0;
}
#board_box::after { /* to clear float */
  content: "";
  display: table;
  padding-bottom: 100%; /* put the extra space on the bottom*/
  clear: both;
}

#gamearea {
  display: flex;
}

#rules {
  flex: 0 2 auto;
  min-width: 200px;
}

@media screen and (max-width: 700px) {
  #gamearea {
    flex-wrap: wrap;
  }
  #board_box::after {
    padding-bottom: 0; /* No extra padding needed because no right bar.*/
  }
}

#execute {
  display: block;
  margin: 5px auto;
}

#editor {
  position: relative;
  overflow: hidden;
  font-size: 1.2em;
  font-family: monospace;
}

#input_code {
  display: block;
  width: 85%;
  height: 400px;
  margin: auto;
  margin-left: 2.5em;
  font-size: inherit;
  font-family: inherit;
  /* We don't want soft line wraps because that makes highlighting
     which instruction harder */
  white-space: nowrap;
  overflow-x: auto;
}

#editor .numbers {
  position: absolute;
  top: 0;
  left: 0;
  padding: 3px 0.5em;
  text-align: right;
  background: #eee;
  width: 1.5em;
}

#editor .numbers > div {
  font-family: inherit;
  font-size: inherit;
}

.executing {
  text-decoration: underline;
  font-weight: bold;
  color: green;
  background: #ffff81;
}

.hidden {
  display: none !important;
}

#error_output {
  border:1px solid black;
  padding: 2px;
  min-height: 2em;
  margin: 0 10px;
  color: darkred;
}